@using Model;
@using PaskolProd.Models;
@model PaskolProd.Models.ArtistEditView

@{
    ViewBag.Title = "אישור אמן חדש";
    Layout = "~/Areas/Admin/Views/Shared/ManagerLayout.cshtml";
}

<h2>אישור אמן חדש</h2>

@using (Html.BeginForm("NewArtist", "Confirmation", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="col-lg-6 col-lg-offset-3" style="direction:rtl; text-align:right">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.UserID)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RegisteredDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.RegisteredDate, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.RegisteredDate, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>

                @if (Model.PictureId != null)
                {
                    <div class="form-group">
                        <div class="col-md-10">
                            <img src="~/File/GetFile?FileId=@Model.PictureId&UserId=@Model.UserID&FileType=@FileType.Photo" alt="avatar" 
                                 style="max-width: 430px;max-height: 500px;" />
                        </div>
                        <span class="control-label col-md-2"><strong>תמונה נוכחית</strong></span>
                    </div>
                }
                <div class="form-group">
                    <div class="col-md-10">
                        <input autocomplete="off" type="file" name="upload" class="form-control" />
                        @Html.ValidationMessageFor(model => model.PictureId, "", new { @class = "text-danger" })
                    </div>
                    @Html.Label("תמונה", new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactManName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactManName, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.ContactManName, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactManPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactManPhone, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.ContactManPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PublicPage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PublicPage, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PublicPage, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>

                <div class="form-group">

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AgentName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AgentName, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.AgentName, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>

                <div class="form-group">

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AgentPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AgentPhone, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.AgentPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>

                <div class="form-group">

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AgentEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AgentEmail, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.AgentEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>

                <div class="form-group">

                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.AgentVerified, new { htmlAttributes = new { disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.AgentVerified, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.LabelFor(model => model.AgentVerified, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>

                <div class="form-group">

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Biography, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Biography, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Biography, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>

                <div class="form-group">

                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.ParticipateInAuction)
                            @Html.ValidationMessageFor(model => model.ParticipateInAuction, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.LabelFor(model => model.ParticipateInAuction, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.PriceLevel, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PriceLevel, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PriceLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
            </div>
        </div>  
        <div class="row">
            <input autocomplete="off" type="hidden" id="confirmAction" name="confirmAction" />
            <div class="col-lg-1 col-lg-offset-3">
                <button type="submit" class="btn btn-success" onclick="$('#confirmAction').val('Ok')">אשר</button>

            </div>
            <div class="col-lg-1">
                <button type="submit" class="btn btn-default" onclick="$('#confirmAction').val('Decline')">דחה</button>

            </div>
            <div class="col-lg-2">
                <input autocomplete="off" type="text" name="DeclineReason" value="" class="form-control" placeholder="סיבת דחייה" />
            </div>
            <div class="col-lg-1">
                <button type="submit" class="btn btn-danger" onclick="$('#confirmAction').val('Block')">חסום</button>
            </div>
        </div>
    </div>
}

<div>
    <a href="@ViewBag.ReturnURL" class="btn btn-default">חזרה לרשימה</a>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}