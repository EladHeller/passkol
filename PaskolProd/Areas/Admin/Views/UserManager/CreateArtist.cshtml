@model PaskolProd.Models.ArtistCreateView

@{
    ViewBag.Title = "יצירת אמן";
    Layout = "~/Areas/Admin/Views/Shared/ManagerLayout.cshtml";
}

<h2>יצירת אמן</h2>
<div class="row">
    <div class="col-lg-6 col-lg-offset-6" style="direction:rtl; text-align:right">
        @using (Html.BeginForm("CreateArtist", "UserManager", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
           // @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="btn-group" role="group" aria-label="...">
                    <button type="button" onclick="location.href = '/Admin/UserManager/CreateArtist?urlReferrer=@ViewBag.ReturnURL'" class="active btn btn-primary">יצירת אמן</button>
                    <button type="button" onclick="location.href = '/Admin/UserManager/CreateCustomer?urlReferrer=@ViewBag.ReturnURL'" class="btn btn-primary">יצירת רוכש תוכן</button>
                    <button type="button" onclick="location.href = '/Admin/UserManager/CreateArtistAgent?urlReferrer=@ViewBag.ReturnURL'" class="btn btn-primary">יצירת מנהל אמנים</button>
                </div>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                   
                    <div class="col-md-10">
                        <input autocomplete="off" type="file" id="Photo" name="upload" class="form-control"/>
                        @Html.ValidationMessageFor(model => model.PictureId, "", new { @class = "text-danger" })
                    </div>
                    @Html.Label("תמונה", new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactManName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactManName, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.ContactManName, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactManPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactManPhone, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.ContactManPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PublicPage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PublicPage, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PublicPage, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                @*<div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AgentName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AgentName, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.AgentName, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AgentPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AgentPhone, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.AgentPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>*@
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AgentEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AgentEmail, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.AgentEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Biography, new { htmlAttributes = new { cols = 35, @rows = 6,  @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Biography, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Biography, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.ParticipateInAuction)
                            @Html.ValidationMessageFor(model => model.ParticipateInAuction, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.LabelFor(model => model.ParticipateInAuction, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-3 col-md-offset-7">
                        @Html.EnumDropDownListFor(model => model.PriceLevel, new {  @class = "form-control"  })
                        @Html.ValidationMessageFor(model => model.PriceLevel, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PriceLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input autocomplete="off" type="submit" value="צור משתמש" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            <a href="@ViewBag.ReturnURL" class="btn btn-default">חזרה לרשימה</a>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}